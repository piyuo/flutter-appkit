# .github/workflows/auto-merge-to-develop.yml
name: Auto Merge Main to Develop

# Trigger this workflow when there are pushes to main branch
on:
    push:
        branches:
            - main

jobs:
    auto-merge:
        runs-on: ubuntu-latest

        steps:
            # Checkout the repository with full history to enable merging
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            # Check if commit message matches release-please pattern
            - name: Check if should sync
              id: check-commit
              run: |
                  COMMIT_MSG=$(git log -1 --pretty=format:"%s")
                  echo "Latest commit message: $COMMIT_MSG"

                  # Only accept commits with exact pattern: chore(main): release
                  if [[ $COMMIT_MSG =~ ^chore\(main\):\ release ]]; then
                      echo "should_sync=true" >> $GITHUB_OUTPUT
                      echo "✅ This is a release-please commit, will sync to develop"
                  else
                      echo "should_sync=false" >> $GITHUB_OUTPUT
                      echo "ℹ️ Commit does not match 'chore(main): release' pattern, skipping sync"
                  fi

            # Configure Git user for the merge commit (only when sync is needed)
            - name: Configure Git
              if: steps.check-commit.outputs.should_sync == 'true'
              run: |
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"

            # Execute merge (only when sync is needed)
            - name: Merge main into develop
              if: steps.check-commit.outputs.should_sync == 'true'
              run: |
                  # Switch to develop branch
                  git checkout develop

                  # Pull latest changes from develop to avoid conflicts
                  git pull origin develop

                  # Merge main branch into develop
                  # Using --no-ff to create a merge commit for better tracking
                  git merge origin/main --no-ff -m "Auto-merge main into develop after release"

                  # Push the merged changes back to develop branch
                  git push origin develop
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # Create success notification
            - name: Create success comment
              if: success() && steps.check-commit.outputs.should_sync == 'true'
              run: |
                  echo "✅ Successfully merged main branch into develop branch"

            # Notification when sync is skipped
            - name: Sync skipped notification
              if: steps.check-commit.outputs.should_sync == 'false'
              run: |
                  echo "ℹ️ Sync to develop was skipped - commit message does not match release pattern"

            # Handle merge conflicts or failures
            - name: Handle merge failure
              if: failure() && steps.check-commit.outputs.should_sync == 'true'
              run: |
                  echo "❌ Failed to merge main into develop. Manual intervention required."
                  echo "This could be due to merge conflicts or other issues."
