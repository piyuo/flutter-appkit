/*
import 'package:flutter/material.dart';
import 'session_provider.dart';

/// getAccessToken return access token if session is valid, it will refresh access token if expired
///
///     final token = await session.getAccessToken(context);
///
Future<String?> getAccessToken(BuildContext context) async => SessionProvider.of(context).getAccessToken();

/// isLogin return true if user is login
///
///     final logIn = await session.isLogin(context);
///
Future<bool> isLogin(BuildContext context) async => SessionProvider.of(context).isLogin();

/// login to save token
///
///     await session.login(
///        context,
///        accessToken: 'fakeAccessToken',
///        accessTokenExpired: DateTime.now().add(const Duration(seconds: 30)),
///        refreshToken: 'fakeAccessToken',
///        refreshTokenExpired: rExpired,
///      );
///
Future<void> login(
  BuildContext context, {
  required String accessToken,
  required DateTime accessTokenExpired,
  String? refreshToken,
  DateTime? refreshTokenExpired,
}) async =>
    SessionProvider.of(context).login(
      accessToken: accessToken,
      accessTokenExpired: accessTokenExpired,
      refreshToken: refreshToken,
      refreshTokenExpired: refreshTokenExpired,
    );
*/